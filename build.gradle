plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'java'
}

group = 'stretch'
version = '2.0'

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
        content {
            includeGroup 'org.bukkit'
            includeGroup "org.spigotmc"
        }
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }

    maven {
        name = 'MockBukkit'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    }

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.0.0-M2'
    compileOnly 'org.spigotmc:spigot-api:1.20.1-R0.1-SNAPSHOT'
    //compileOnly 'stretch:spigot-nms:1.0'
    //implementation 'com.google.code.gson:gson:2.8.9'
    //implementation files('/home/michael/maven/sisc.jar')
    //implementation 'org.clojure:clojure:1.11.1'
    //implementation 'org.luaj:luaj-jse:3.0.1'
    //implementation 'org.luaj:luaj-jse:3.0.1'
    //implementation 'org.bstats:bstats-bukkit:3.0.2'
    implementation 'stretch:luaj-jse:3.0'
    implementation 'stretch:luaj-core:3.0'
    testImplementation 'com.github.seeseemelk:MockBukkit-v1.19:2.29.0'
}

test {
    useJUnitPlatform()
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
