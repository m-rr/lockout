plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'java'
}

group = 'stretch'
version = '2.5.1-TESTING'

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
        content {
            includeGroup 'org.bukkit'
            includeGroup "org.spigotmc"
        }
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }

    maven {
        name = 'papermc'
        url = uri("https://repo.papermc.io/repository/maven-public/")
    }
}

dependencies {
    // Test dependencies - Scopes look correct
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation 'org.mockbukkit.mockbukkit:mockbukkit-v1.21:4.0.0'
    testImplementation 'org.mockito:mockito-core:5.16.1' // Updated to 5.12.0 as 5.16.1 might not exist, adjust if needed

    // Plugin dependencies
    compileOnly 'io.papermc.paper:paper-api:1.21.4-R0.1-SNAPSHOT'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'org.luaj:luaj-jse:3.0.1'
}

test {
    useJUnitPlatform()
    testLogging { events "passed", "skipped", "failed" }
}


def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    //sourceCompatibility = javaVersion
    //targetCompatibility = javaVersion
    toolchain {
        languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

// This ensures 'test' runs and succeeds before 'shadowJar' starts building the fat JAR.
tasks.named('shadowJar') {
    //dependsOn tasks.named('test')

    archiveClassifier = '' // Removes the '-all' or similar classifier from the final JAR name
    // minimize()

}
